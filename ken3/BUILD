cc_library(
    name = "angle",
    hdrs = ["angle.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "biconv",
    hdrs = ["biconv.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "bits",
    srcs = ["bits.cpp"],
    hdrs = ["bits.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "biunique_map",
    hdrs = ["biunique_map.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "cast",
    hdrs = ["cast.hpp", "cast/int_cast.hpp", "cast/string_to.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "counter",
    hdrs = ["counter.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "fraction",
    srcs = ["fraction.cpp"],
    hdrs = ["fraction.hpp", "overflow.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "metric",
    hdrs = ["metric.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "overflow",
    hdrs = ["overflow.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "pyfunc",
    srcs = ["pycommon.cpp"],
    hdrs = ["pycommon.hpp", "pyfunc.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "pyloop",
    srcs = ["pycommon.cpp"],
    hdrs = ["pycommon.hpp", "pyloop.hpp", "pyloop/enumerate.hpp", "pyloop/range.hpp", "pyloop/zip.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "pystr",
    srcs = ["pycommon.cpp", "pystr.cpp"],
    hdrs = ["pycommon.hpp", "pystr.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "scope_exit",
    srcs = ["scope_exit.cpp"],
    hdrs = ["scope_exit.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "stopwatch",
    srcs = ["stopwatch.cpp"],
    hdrs = ["stopwatch.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "type_util",
    hdrs = ["type_util.hpp"],
    visibility = ["//unittest:__pkg__"],
)

cc_library(
    name = "typenames",
    hdrs = ["typenames.hpp"],
    visibility = ["//unittest:__pkg__"],
)
